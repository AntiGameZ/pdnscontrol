.logo {
    vertical-align: bottom;
    margin-bottom: 7px;
    margin-top: 7px;
    border: 0;
    height: 20px;
    width: 154px;
    float: right;
    background: url(../images/powerdns-logo-154px.png);
}

.output pre {
    margin-bottom: 2em;
    margin-top: 0.8em;
    background: #eee;
    padding: 5px 5px 5px 5px;
    border-radius: 5px;
    border: 1px solid #ccc;
    border-bottom: 2px solid #bbb;
    border-right: 2px solid #bbb;
    overflow: auto;
}

h2.server-name {
    margin-top: 0;
    margin-bottom: 0;
}

.title-edit {
    font-size: 12pt;
}

.spinner {
    margin-right: 1em;
    width: 80px;
}

.inline {
    display: inline;
}

.inline-block {
    display: inline-block;
}

.visibility-hidden {
    /* sometimes display: none causes bad effects like jumping content. then it's better to use visiblity: hidden. */
    visibility: hidden;
}

a.alert {
    color: $alert-color;
    &:hover,
    &:focus {
         color: scale-color($alert-color, $lightness: $anchor-font-color-lightness);
    }
}

.tabs dd.active, .tabs li.active {
    border-top: 3px solid #3B8EC8;
}

.tabs {
    margin-bottom: 0; /* override foundation */
}

.server-list input[type="checkbox"] {
    margin-bottom: 0;
}

input[type="checkbox"].inline {
    margin-bottom: 0;
}

.header-actions button, .header-actions a.button {
    margin-bottom: 0;
}

.button-group:last-child {
    margin-right: 0;
}

/* used by search log */
form.inline-form {
    margin: 0;
}

/* hack for foundicons. transforms a button into something that
 * resembles a link. */
.link-button {
    border: none;
    background: none;
    color: #E38000;
    cursor: pointer;
}
.link-button:hover {
    color: #E3A000;
}

.empty .actions button {
    display: none;
}

.hidden {
    display: none;
}

.zoneName {
    color: #888;
    font-style: italic;
}

footer {
    font-size: 10px;
}

.graphite-times {
    font-size: 80%;
    /* flush right end with graph border */
    padding-right: 9px;

    .active {
        font-weight: bold;
    }
}

.top-bar-section .has-indicator {
    height: 45px;
    padding-top: 8px;
}

#topbar-search {
  width: 60%;
  float: right;
}
#topbar-search:focus {
  width: 100%;
}

.graphite-graph {
    /* disable space between graphite-times and img */
    line-height: 100%;
}

.graphite-graph-loading {
  padding-right: 0.5em;
}

.table-buttons .button, .table-buttons input {
  margin-bottom: 0;
}

@include keyframes(changeInProgress) {
  0% {
    opacity: 0.1;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.1;
  }
}

.changeInProgress {
    @include animation(changeInProgress 3s linear infinite);
}

/* global request pending animation */

@include keyframes(requestsPending) {
  0% {
    border-bottom-color: rgba(255, 255, 255, 0.1);
  }
  50% {
    border-bottom-color: rgba(255, 255, 255, 1);
  }
  100% {
    border-bottom-color: rgba(255, 255, 255, 0.1);
  }
}

.requestsPendingIndicator {
  border-bottom: 8px solid transparent;
}
.requestsPendingIndicator.active {
  @include animation(requestsPending 2s linear infinite);
}

/* records editor */
.recordRowMeta {
  white-space: nowrap;
  word-spacing: 0;
  padding-right: 0;
}
.recordRowMeta .disabled {
  color: scale-color(#000, $lightness: 80%);
}
.recordIsDisabled {
  text-decoration: line-through;
  color: scale-color(#000, $lightness: 30%);
  font-style: italic;
}


/* our own tooltips, which don't need JS */
/* Note: can't attach to table-cell, block or similar. */
.app-tooltip {
  display: inline;
  position: relative;
}
.app-tooltip:hover:after {
  content: attr(tooltip);
  background: #333;
  background: rgba(0,0,0,.8);
  color: white;
  bottom: 28px;
  left: -10px;
  padding: 5px 8px;
  width: 200px;
  position: absolute;
  z-index: 98;
}
.app-tooltip:hover:before {
  content: "";
  border: solid;
  border-color: #333 transparent;
  border-width: 6px 6px 0 6px;
  bottom: 22px;
  left: 0px;
  position: absolute;
  z-index: 99;
}



/* angular-xeditable styles */
.editable-wrap {
  display: inline-block;
  white-space: nowrap;
  margin: 0;
}
/* remove bottom-margin for bootstrap */
.editable-wrap .editable-controls,
.editable-wrap .editable-error {
  margin-bottom: 0;
}
/* remove bottom-margin of inputs */
.editable-wrap .editable-controls > input,
.editable-wrap .editable-controls > select,
.editable-wrap .editable-controls > textarea {
  margin-bottom: 0;
}
/* keep buttons on the same line */
.editable-wrap .editable-input {
  display: inline-block;
}
.editable-buttons {
  display: inline-block;
  vertical-align: top;
}
.editable-buttons button {
  margin-left: 5px;
}
/* in bootstrap width: 100% => buttons go outside the box */
.editable-input.editable-has-buttons {
  width: auto;
}
/* workaround for bootstrap that sets width: 100% and inputs become too wide */
.editable-bstime .editable-input input[type="text"] {
  width: 46px;
}
/* less padding for .well */
.editable-bstime .well-small {
  margin-bottom: 0;
  padding: 10px;
}
.editable-range output {
  display: inline-block;
  min-width: 30px;
  vertical-align: top;
  text-align: center;
}
.editable-color input[type="color"] {
  width: 50px;
}
.editable-checkbox label span,
.editable-checklist label span,
.editable-radiolist label span {
  margin-left: 7px;
  margin-right: 10px;
}

/* angular-xeditable overrides */
.editable-click:hover {
  background: yellow;
}
.editable-hide {
  display: none !important;
}


/* record editor */
.recordEdit {
  input[type=text], input[type=checkbox], select {
    padding: 0;
    display: inline;
    margin: 0;
    height: auto;
  }
  button {
    margin: 0;
    padding: 0;
    color: $primary-color;
    background: none;
  }
  button.cancel {
    color: $alert-color;
  }
}
table.recordEdit {
  tr th, tr td {
    padding: 0.3rem 0.3rem;
  }
}

.recordEditControls {
  span.hasErrors {
    color: $alert-color;
  }
  button.hasErrors {
    background-color: $alert-color;
  }
}

/* fixed widths for columns and xeditable fields */
.recordPrio {
  width: 40px;
  input[type=text] {
    width: 30px;
  }
}
.recordTtl {
  width: 60px;
  input[type=text] {
    width: 50px;
  }
}
.recordDisabled {
  width: 80px;
  input[type=text] {
    width: 70px;
  }
}
.recordContent {
  input[type=text] {
    min-width: 300px;
  }
}
.recordType {
  width: 60px;
}
