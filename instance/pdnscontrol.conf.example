
# Encryption key for client-side sessions.
# Please generate a new one, f.e. using this:
#   python -c 'print repr(open("/dev/urandom","rb").read(42))'
# SECRET_KEY = ''

# Your database.
# Example: DATABASE_URI = 'postgresql://user:password@localhost:5432/pdnscontrol'
#
# DATABASE_URI = ''

# SECURITY_PASSWORD_HASH = 'pbkdf2_sha512'

# Salt key for password hashing.
# Please generate a new one, f.e. using this:
#   python -c 'print repr(open("/dev/urandom","rb").read(16))'
# SECURITY_PASSWORD_SALT = ''

# PREFERRED_URL_SCHEME = 'http'
# LOG_FILE = 'app.log'

# Make sure this URL returns a PNG saying "No Data" and not a web GUI.
# GRAPHITE_SERVER = 'http://127.0.0.1:8085/render/'
# GRAPHITE_TIMEOUT = 30
# IGNORE_SSL_ERRORS = False

# USE_X_SENDFILE = False
# SESSION_COOKIE_NAME = 'ControlSess'

# DEBUG = False

# For pdns2graphite:

# URL of serverlist (on pdnscontrol port)
# serverlist_url = 'http://127.0.0.1:5000/servers.json'

# Name or address of Carbon server (default: 127.0.0.1)
# carbon_server = '10.0.12.1'

# Port on which Carbon server listens (default: 2003)
# carbon_port = 2003

# Sleep between checks in seconds (default: 5)
# carbon_delay = 5

# Authentication: user & password (no defaults)
# pdnscontrol_user = 'graphite@example.org'
# pdnscontrol_pass = 'notsecure'
